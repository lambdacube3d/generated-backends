done - indentation
done - hpp to EDSL
done - storage to EDSL
done - pretty print
  done - hpp
  done - cpp
done - include support: baked in
done - c++ - working ipad program with generated backend

android java opengl es 2.0:
  done - first handwritten opengl code with android studio
  done - collect opengl calls into an ADT (reify gl commands)
  done - generate IR ADT for Java
  done - write LambdaCube.RT Java package
  done - generate enum functions
  - generate global functions into a special class

java backend:
  problematic things to solve:
    switch on ADT (should be a primitive)
    remove `auto` type, instead use explicit type annotation
    void* type (used in c++, can not be used in Java)
    union in: Stream, UniformValue (used in c++)
    remove record value (used in setUniform methods)

  done - nsPat for DDL ADT constructor enum
  done - nsPat for custom
  done - use explicit type for foreach iterator
  mark methods that throws exception
  higher level: glGenTextures, glGenFramebuffers, glDeleteTextures, glDeleteFramebuffers
  higher level: glUniform2iv, glUniformMatrix2fv, glVertexAttrib2fv
  higher level: glShaderSource, glGetUniformLocation, glGetAttribLocation
  remove struct record construction/handle it properly in heap
  handle Util procedure calls (static methos)

now focus:
  GLES20: C++, Java
  DX11:   C#

backend matrix:

            GLES20  WebGL1  GL33  GL45  GLES30  GLES31  DX11  Vulkan  Metal
C++         X               X     X     X       X       X     X       X
Java        X               X     X     X       X       ?     ?       ?
JavaScript          X
PureScript          X
Haskell     ?               X     X     ?       ?       ?     X       ?
C#          ?               ?     ?     ?       ?       X     ?       ?
Python      ?               X     X     ?       ?       ?     ?       ?
Swift       X               ?     ?     X       X       ?     ?       X

API similarities:
  GLES20 ~ WebGL1
  GL33 ~ GLES30
  GL45 ~ GLES31

